@page "/ingreso-Animales"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>AnimalesIngreso</h3>

<EditForm Model="@ave" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label label for "Nombre"> Nombre ave</label>
        <InputText id="Nombre" @bind-Value="ave.Nombre" class="from-control" />
        <ValidationMessage For="() => ave.Nombre" />
    </div
    <div class="form-group">
        <label label for "Especie"> Especie ave</label>
        <InputText id="Especie" @bind-Value="ave.Especie" class="from-control" />
        <ValidationMessage For="() => ave.Especie" />
    </div>
    <div class="form-group">
        <label label for "Descripcion"> Alimentacion ave</label>
        <InputText id="Descripcion" @bind-Value="ave.Alimentacion" class="from-control" />
        <ValidationMessage For="() => ave.Alimentacion" />
    </div>

    <div class="form-group">
        <label label for "AniosVida"> Años de vida maxima</label>
        <InputNumber id="AniosVida" @bind-Value="ave.AniosVida" class="from-control" />
    </div>

    <div class="form-group">
        <label label for "Vuela"> NO/SI vuela</label>
        <InputText d="Vuela" @bind-Value="ave.Vuela" class="from-control" />
        <ValidationMessage For="() => ave.Vuela" />
    </div>
    <div class="form-group">
        <label label for "Perido"> Periodo de encubacion </label>
        <InputText id="Periodo" @bind-Value="ave.Periodo" class="from-control" />
         <ValidationMessage For="() => ave.Periodo" />

    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    </div>

</EditForm>
@if (aves != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Especie</th>
                <th>Alimentacion</th>
                <th>VidaMaxima</th>
                <th>Vuela</th>
                <th>incubacion</th>
                <th>Editar</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ave in aves)
            {
                <tr>
                    <td>@ave.Nombre</td>
                    <td>@ave.Especie</td>
                    <td>@ave.Alimentacion</td>
                    <td>@ave.AniosVida</td>
                    <td>@ave.Vuela</td>
                    <td>@ave.Periodo</td>
                    <td>
                        <button class="btn btn-danger"
                                @onclick="@(() => Borrar(ave.Nombre))">
                            Eliminar
                        </button>
                    </td>
                    <td>
                        <button class="btn btn-warning"
                                @onclick="@(() => NavigationManager.NavigateTo($"/animal-editar/{ave.Nombre}"))">
                            Editar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    List<clsAve> aves = new List<clsAve>();
    private clsAve ave = new clsAve();

    protected async Task Guardar()
    {
        aves.Add(ave);
        ave = new clsAve();
        await localStorage.SetItemAsync("Aves", aves);

    }
    protected override async Task OnInitializedAsync()
    {  //La primera vez que se corre poner en comentarios, pues como no existen datos
       //convierta la lista catedraticos en null
       aves  = await localStorage.GetItemAsync<List<clsAve>>("Aves");
    }
    protected async Task Borrar(string N)
    {
        aves.Remove(aves.First(c => c.Nombre == N));
        await localStorage.SetItemAsync("Aves", aves);
    }

}
