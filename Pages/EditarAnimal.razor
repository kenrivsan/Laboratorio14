@page "/animal-editar/{NomAve}"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>EditarAnimal</h3>

<EditForm Model="@ave" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label label for "Nombre"> Nombre ave</label>
        <InputText id="Nombre" @bind-Value="ave.Nombre" class="from-control" />
        <ValidationMessage For="() => ave.Nombre" />
    </div
    <div class="form-group">
        <label label for "Especie"> Especie ave</label>
        <InputText id="Especie" @bind-Value="ave.Especie" class="from-control" />
        <ValidationMessage For="() => ave.Especie" />
    </div>
    <div class="form-group">
        <label label for "Descripcion"> Alimentacion ave</label>
        <InputText id="Descripcion" @bind-Value="ave.Alimentacion" class="from-control" />
        <ValidationMessage For="() => ave.Alimentacion" />
    </div>

    <div class="form-group">
        <label label for "AniosVida"> Años de vida maxima</label>
        <InputNumber id="AniosVida" @bind-Value="ave.AniosVida" class="from-control" />
    </div>

    <div class="form-group">
        <label label for "Vuela"> NO/SI vuela</label>
        <InputText d="Vuela" @bind-Value="ave.Vuela" class="from-control" />
        <ValidationMessage For="() => ave.Vuela" />
    </div>
    <div class="form-group">
        <label label for "Perido"> Periodo de encubacion </label>
        <InputText id="Periodo" @bind-Value="ave.Periodo" class="from-control" />
         <ValidationMessage For="() => ave.Periodo" />

    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    </div>

</EditForm>
@code {
    [Parameter]
    public string NomAve { get; set; }

    List<clsAve> aves = new List<clsAve>();
    private clsAve ave = new clsAve();

    protected async Task Guardar()
    {
        await localStorage.SetItemAsync("Aves", aves);
        NavigationManager.NavigateTo("/ingreso-Animales");
    }
    protected override async Task OnInitializedAsync()
    {  //La primera vez que se corre poner en comentarios, pues como no existen datos
       //convierta la lista catedraticos en null
       aves = await localStorage.GetItemAsync<List<clsAve>>("Aves");
       ave = aves.Find(c => c.Nombre == NomAve);
    }
}
